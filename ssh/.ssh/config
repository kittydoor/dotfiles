AddKeysToAgent yes

# Ensure KnownHosts are unreadable if leaked - it is otherwise easier to know which hosts your keys have access to.
HashKnownHosts yes
# Host keys the client accepts - order here is honored by OpenSSH
HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256

KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

Include ~/.podictive/ssh_config

### NYAA-GATE
# via local link
Host nyaa-gate.lan
  Hostname nyaa-gate.lan

### NYAA-CORE
# via air
Host core.air.kitty.sh
  HostName core.air.kitty.sh
  Port 22335

# via link
Host nyaa-core
  Hostname link.kitty.sh
  Port 2222

# via local link
Host nyaa-core.lan
  Hostname nyaa-core.lan

### NYAA-LINK
# via link
Host nyaa-link
  Hostname link.kitty.sh
  User root
  IdentityFile ~/.ssh/id_rsa_nyaa_link

# via local link
Host nyaa-link.lan
  Hostname nyaa-link.lan
  User root
  IdentityFile ~/.ssh/id_rsa_nyaa_link

### KITTY.SH
Host kitty.sh alevnyaa.com

### GIT
Host kittydoor.github.com github.com
  User git

Host gitlab.jamious.com
  User git
  Port 10022
  IdentityFile ~/.ssh/id_ed25519_podictive

Host gitlab.com
  User git

Host *
  User kitty
  IdentityFile ~/.ssh/id_ed25519_master_core
  IdentityFile ~/.ssh/id_ed25519_master_gate
  IdentitiesOnly yes
  StrictHostKeyChecking ask
