---
# roles/software/tasks/cloud.yml

- name: install cloud software
  dnf:
    name: "{{ item }}"
    state: present
  loop:
    - "ansible"
    - "python3-ansible-lint"
    - "kubernetes-client"
  become: yes

- name: ensure http(ie) exists (for terraform version fetch)
  dnf:
    name: httpie
    state: present
  become: yes

# manually pulling kubectl due to repo versions being too old
# however, kubernetes-client still provides useful docs
- name: find latest version of kubectl
  shell: |
    set -o pipefail
    curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
  register: latest_kubectl_version
  changed_when: false

- name: Kubectl version verification
  debug:
    msg: "Kubectl version found: {{ latest_kubectl_version.stdout }}"

- name: install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ latest_kubectl_version.stdout }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin
    owner: root
    mode: '0755'
  become: yes

- name: find latest version of terraform
  shell: |
    set -o pipefail
    http get https://releases.hashicorp.com/terraform/ | awk -F/ '/terraform/ { print $3 }' | head -n 1
  register: latest_terraform_version
  changed_when: false

- name: Terraform version verification
  debug:
    msg: "Terraform version found: {{ latest_terraform_version.stdout }}"

- name: install terraform
  unarchive:
    src: https://releases.hashicorp.com/terraform/{{ latest_terraform_version.stdout }}/terraform_{{ latest_terraform_version.stdout }}_linux_amd64.zip
    dest: /usr/local/bin
    owner: root
    mode: '0755'
    remote_src: yes
  become: yes

#curl -L https://github.com/helm/helm/releases/latest/ | grep -oP -- 'https://get.helm.sh/helm-.*?-linux-amd64.tar.gz' | head -n 1
- name: find latest version of helm
  shell: |
    set -o pipefail
    curl -sL https://github.com/helm/helm/releases/latest/ | grep -oP -- "Release Helm \Kv[0-9.]*"
  register: latest_helm_version
  changed_when: false

- name: Helm version verification
  debug:
    msg: "Helm version found: {{ latest_helm_version.stdout }}"

- name: install helm
  unarchive:
    src: https://get.helm.sh/helm-{{ latest_helm_version.stdout }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    mode: '0755'
    remote_src: yes
    exclude:
      - linux-amd64/LICENSE
      - linux-amd64/README.md
      - linux-amd64/tiller
    extra_opts:
      - --strip-components=1
  become: yes

- name: install minikube
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    owner: root
    mode: '0755'
  become: yes

- name: install minishift
  unarchive:
    src: https://github.com/minishift/minishift/releases/download/v1.34.1/minishift-1.34.1-linux-amd64.tgz
    dest: /usr/local/bin
    owner: root
    mode: '0755'
    remote_src: yes
    exclude:
      - minishift-1.34.1-linux-amd64/LICENSE
      - minishift-1.34.1-linux-amd64/README.adoc
    extra_opts:
      - --strip-components=1
  become: yes

- name: install docker-machine (minishift dependency)
  get_url:
    url: https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-Linux-x86_64
    dest: /usr/local/bin/docker-machine
    owner: root
    mode: '0755'
  become: yes

- name: install docker-machine (minishift dependency)
  get_url:
    url: https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.10.0/docker-machine-driver-kvm-centos7
    dest: /usr/local/bin/docker-machine-driver-kvm
    owner: root
    mode: '0755'
  become: yes

# TODO: Remove this at some point
- name: legacy - delete minikube package
  dnf:
    name: minikube
    state: absent
  become: yes
