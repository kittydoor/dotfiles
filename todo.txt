# vim:ts=2:sw=2:et

Common
* Add caps esc swap to some config: dconf write /org/gnome/desktop/input-sources/xkb-options "['caps:swapescape']" 
* setup config command for dotfiles, session autologin swap, and other tasks and notes
* change hostnames from nyaa-<name> to <name>.nyaa.kitty.sh ?
* setup hosts file (or dns?) for <name>.wg
* make ansible and openwrt config both run on git commits, and also runnable manually via simple command (make?)
* investigate https://github.com/billimek/dotfiles
* hibernate
  * investigate suspend, hibernate, hybrid-sleep, suspend-then-hibernate across systems
* volume
  * by default print current volume
* Ansible
  * locate mlocate updatedb
    * Default configuration (/etc/updatedb.conf) ignores /media, which it shouldn't
  * custom module for grub cmdline options
    * some code to start with: cat /etc/default/grub | grep GRUB_CMDLINE_LINUX | python -c "import sys,shlex; filebuf = sys.stdin.read(); optsbuf = filebuf.split('=', 1)[1]; listbuf = shlex.split(optsbuf); listbuf.append('iommu=pt'); print('GRUB_CMDLINE_LINUX=\"' + ' '.join(listbuf) + '\"')"
* sway
  * sway-gnome - https://github.com/Drakulix/sway-gnome
  * Find a way to show menu and other tips and tricks on wallpaper
* i3-gnome
  * Look into how regolith does it
    * https://regolith-linux.org/internals.html
    * https://github.com/regolith-linux/
* terminals
  * st - terminal - https://gitlab.com/kittydoor/st
    * Check if terminfo in right dir (investigate the folder I found in ~/.terminfo)
  * kitty
* Vim
  * wayland/x11 smart clipboard (by default, clipboard only works on x11 itself, or xwayland terminals) (or use neovim)
  * command to resize window exactly to file length (for tmux and for vim splits)
  * find how to remove all UI elements / clean or minimalist mode for demos
* i3 status bar
  * Investigate py3status, i3blocks, polybar, or other options
  * FontAwesome for icons
  * Show current wifi name
  * Show vpn status, on/off by press, altclick to change profile
  * Show battery status / check for updates
  * Show memory and cpu in a useful manner
  * Show disk space properly
  * Show available updates or last update time
  * Show volume accurately, allow switching to different output or muting
* Shell - https://gitlab.com/kittydoor/dotfiles/tree/master/.config/zsh
  * Integrate directory to left prompt, since it makes copying terminal outfit (for slack/git/tickets/etc) and sanitizing it easier
  * Profile TERMINAL doesn't work correctly when multiple are found
  * Set st window name to tmux session automatically
  * Figure out the right way (a shell script, alias, etc) to launch st with correct title and tmux
  * Disable arrow keys in zsh to match vim setup
  * READ: https://superuser.com/questions/187639/zsh-not-hitting-profile
* Network - automate setting manual dns on networks
  * ipv4.dns:                               8.8.8.8,1.1.1.1
  * ipv4.ignore-auto-dns:                   yes
* Autologin gnome vs i3
  * /var/lib/AccountsService/users/kitty -> change 'XSession' to 'gnome-xorg' or 'i3'

Packaging
* fedora-packages - Gitlab repo
  * package helm
  * package st (maybe also look into urxvt more)
  * investigate what else to package (look at what's installed by ansible)

Programming Projects
* Do something with Golang
* Do something with Rust
* Do something with Lisp
* Do something with Haskell
* gitman - https://gitlab.com/kittydoor/dotfiles/ groupman.py
  * add cloning subcommand
  * add sync missing repositories and archive deleted subcommand
  * add status on all subcommand
  * add fetch -ap, co master, pull master subcommand
* userify.sh - https://gitlab.com/kittydoor/dotfiles/ groupman.py
  * add help message
  * set defaults in user xdg data dir
  * enable profiles
  * better messages for changes
* Service for dynamic ip using do dns / domain

Infra Projects
* terraform - https://gitlab.com/kittydoor/terraform.git
  * terraform for kitty.sh/katherine.sh
    * dns records and vps
    * provisioning
    * partially done, however primary server is still the legacy
    * extras
      * one button deploy
      * one button deploy new and switch when ready
      * one button duplicate
  * k8s and ingress
* Ansible base provisioner for secure and sane machines, and some extra roles for features
  * SSH Hardening
  * Automatic updates
* VPN
  * Ansible Wireguard
  * Investigate tinc - https://tinc-vpn.org/
  * Investigate Nebula by Slack - https://github.com/slackhq/nebula
  * Investigate Gravitational Wormhole (Wireguard) for Kubernetes - https://gravitational.com/blog/announcing_wormhole/

Nyaa-Core
* gaming.sh
  * Ensure is correct
  * Look into looking glass again

Nyaa-Gate
* Wireless
  * From the wireless info for uni, configure wireless profile, keep in vcs
  * Figure out why systemd-resolved or static dns causes issues with uni wifi

Nyaa-Link
* Wireguard setup

Nyaa-Pi4
* Userland utilities (investigate k3s-gitops-arm)
* Ansible complete setup
* cloud-init ensure uid/guid 1000
* complete k8s media helmfile
* integrate wireguard vpn
* investigate using nfs (and how to secure it, perhaps via only wireguard?)
* investigate how to have specific pods use a vpn for external traffic

Uncategories
* Document btrfs and remote unlock setup with systemd-tool
* nyaa-core to Arch Linux
* traefik-internal traefik-external ingress providers
* nyaa-wire wireguard vpn setup
* samba in a container instead of os level
* nyaa-core network bridge
* grafana on k8s
* pihole
* mosquitto debug restarts (ha restart, mq restart, tasmota restart)
* get smart switches for lightbulb
* setup homeassistant google home
* kitty.sh terraform ansible automation
* CI/CD containers helm for k8s
* Kubernetes monitor for outdated container images
