# Add keys on first use
AddKeysToAgent yes
# Ensure KnownHosts are unreadable if leaked - it is otherwise easier to know which hosts your keys have access to.
HashKnownHosts yes
# Refuse to connect to changed host key, ask to save host key
# StrictHostKeyChecking ask
# due to ansible
StrictHostKeyChecking no
# Host keys the client accepts - order here is honored by OpenSSH
HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256

KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# Break gnome-keyring if yes, breaks git multikey if no
# IdentitiesOnly yes

Include ~/.work/ssh_config

### NYAA-CORE
# via link
Host nyaa-core
  Hostname link.kitty.sh
  Port 2222

Host nyaa-core-jump
  Hostname nyaa-core.lan
  ProxyJump nyaa-link

### NYAA-LINK
# via link
Host nyaa-link
  Hostname link.kitty.sh
  User root
  IdentityFile ~/.ssh/id_rsa_master

# via local link
Host nyaa-link.lan
  Hostname nyaa-link.lan
  User root
  IdentityFile ~/.ssh/id_rsa_master

### KITTY.SH
Host kitty.sh alevnyaa.com
  User kitty

### GIT
Host github.com gitlab.com
  User git

Host katherine_.gitlab.com
  Hostname gitlab.com
  User git
  IdentitiesOnly yes
  IdentityFile ~/.ssh/id_ed25519_aigent

### AUR
Host aur.archlinux.org
  User aur
  IdentityFile ~/.ssh/id_ed25519_aur

### FALLBACK
Host *
  User kitty
  IdentityFile ~/.ssh/id_ed25519_master
